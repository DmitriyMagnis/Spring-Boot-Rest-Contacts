
REST API Contact
----------------

Postman для тесту REST API
https://www.postman.com/

Стартуємо додаток в IDE.

(1) REST-запит на отримання даних

GET
http://localhost:8080/Spring-Boot-MySQL-Rest-0.0.1-SNAPSHOT/api/v1/contacts
http://localhost:8080/api/v1/contacts   // for spring devtools

(2) REST-запит на створення даних

POST
http://localhost:8080/Spring-Boot-MySQL-Rest-0.0.1-SNAPSHOT/api/v1/contacts
http://localhost:8080/api/v1/contacts   // for spring devtools

Налаштування в Postman: Body, raw, JSON.
Прописуємо при кожному запиті окремо.
УВАГА. Для ключів, НЕ "first_name", а "firstName".
Інакше, помилка first_name є null, а при створенні
нашої таблиці колонка first_name NOT NULL.

{
	"firstName": "Alice",
	"lastName": "Clark",
	"email": "alice@mail.com"
}


{
	"firstName": "John",
	"lastName": "Green",
	"email": "john@mail.com"
}

{
	"firstName": "Robert",
	"lastName": "Debian",
	"email": "robi@glob.net"
}

{
	"firstName": "Lucy",
	"lastName": "Terra",
	"email": "lucy555@mail.com"
}


(3) REST-запит на отримання даних за id

GET
http://localhost:8080/Spring-Boot-MySQL-Rest-0.0.1-SNAPSHOT/api/v1/contacts/2
http://localhost:8080/api/v1/contacts   // for spring devtools


(4) REST-запит на оновлення даних за id

PUT
http://localhost:8080/Spring-Boot-MySQL-Rest-0.0.1-SNAPSHOT/api/v1/contacts/4
http://localhost:8080/api/v1/contacts   // for spring devtools

{
	"firstName": "Lucy",
	"lastName": "Moon",
	"email": "moon@mail.com"
}


(5) REST-запит на видалення даних за id

DELETE
http://localhost:8080/Spring-Boot-MySQL-Rest-0.0.1-SNAPSHOT/api/v1/contacts/3
http://localhost:8080/api/v1/contacts   // for spring devtools

